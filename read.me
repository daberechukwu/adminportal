const express = require('express');
const path = require('path');
const fetch = require('node-fetch');
const bodyParser = require('body-parser');
const passport = require('passport');
const session = require('express-session');

const app = express();
const port = 3000;

const handlebars = require('express-handlebars');

const hbs = handlebars.create({
    extname: 'hbs',
    defaultLayout: false,
});

app.engine('handlebars', hbs.engine);
app.set('view engine', 'handlebars');
app.set('views', path.join(__dirname, 'views'));

app.use(express.static(path.join(__dirname, 'public')));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));

app.use(session({
    secret: 'bc51c8306092c75835fde6a943fb091b10763bae607b76cdc979d5d188e3f941',
    resave: false,
    saveUninitialized: true,
}));

app.use(passport.initialize());
app.use(passport.session());

passport.serializeUser((admin, done) => {
    done(null, admin.email); // Save the user's email in the session
});

passport.deserializeUser(async (email, done) => {
    try {
        // Retrieve the admin by email from your API response or database
        const apiResponse = await fetch(`https://demoapi.ppleapp.com/api/v1/admin/admin-by-email/${email}`);

        if (apiResponse.ok) {
            const admin = await apiResponse.json();
            if (admin) {
                done(null, admin);
            } else {
                done(null, false);
            }
        } else {
            done(null, false);
        }
    } catch (err) {
        done(err, false);
    }
});

function ensureAuthenticated(req, res, next) {
    if (req.isAuthenticated()) {
        return next();
    }
    res.redirect('/');
}

app.get('/', (req, res) => {
    res.render('login');
});

app.get('/dashboard',  (req, res) => {
    res.render('dashboard');
});

app.get('/create-admin',  (req, res) => {
    res.render('createAdmin');
});

app.get('/create-users',  (req, res) => {
    res.render('createUsers');
});

app.get('/edit-profile', (req, res) => {
    res.render('edit');
});

app.get('/create-events', (req, res) => {
    res.render('createEvents');
});

app.get('/attach-user', (req, res) => {
    res.render('attach');
});

app.get('/delete',  (req, res) => {
    res.render('delete');
});

app.get('/add-profile',  (req, res) => {
    res.render('addprofile');
});

app.post('/login', async (req, res, next) => {
    const { email, password } = req.body;

    try {
        const apiResponse = await fetch('https://demoapi.ppleapp.com/api/v1/admin/admin-login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ email, password }),
        });

        if (apiResponse.ok) {
            const data = await apiResponse.json();
            console.log('API Response:', data);

            req.login(data.admin, (err) => {
                if (err) {
                    console.error('Login Error:', err);
                    return res.render('login', { error: 'An error occurred while logging in' });
                }

                // Redirect to the dashboard only if the user is authenticated
                return next();
            });
        } else {
            res.render('login', { error: 'Wrong email or password!' });
        }
    } catch (error) {
        console.error('Error:', error);
        res.render('login', { error: 'An error occurred while processing your request' });
    }
}, ensureAuthenticated, (req, res) => {
    // This middleware function will only be reached if the user is authenticated
    res.redirect('/dashboard');
});


app.post('/create-admin', async (req, res) => {
    const { email, name, password, role } = req.body;

    try {
        // Send a request to the API to create an admin user
        const apiResponse = await fetch('https://demoapi.ppleapp.com/api/v1/admin/create-admin', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ email, name, password, role }),
        });

        if (apiResponse.ok) {
            res.render('adminSuccess', { message: 'Admin successfully created!' }); // Render adminSuccess view on success
        } else {
            res.render('adminError', { error: 'Admin creation failed or admin already exists.' }); // Render adminError view on failure
        }
    } catch (error) {
        console.error('Error:', error);
        res.render('adminError', { error: 'An error occurred while processing your request' }); // Render adminError view on error
    }
});


app.post('/create-users', async (req, res) => {
    const { firstname, lastname, username, bio, displayName } = req.body;
    console.log('First Name:', firstname);
    console.log('Last Name:', lastname);
    console.log('Username:', username);
    console.log('Bio:', bio);
    console.log('Display Name:', displayName);

    try {
        const response = await fetch('https://demoapi.ppleapp.com/api/v1/admin/create-user-account', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ firstname, lastname, username, bio, displayName }),
        });

        if (response.ok) {
            const data = await response.json();
            console.log('API Response:', data);
            res.render('createUsers', { message: 'User successfully created!' });
        } else {
            res.render('createUsers', { error: 'User already exists or cannot create user!' });
        }
    } catch (error) {
        console.error('Error:', error);
        res.render('createUsers', { error: 'An error occurred while processing your request' });
    }
});

app.post('/edit-profile', async (req, res) => {
    const { firstname, lastname, username, bio, displayName } = req.body;
    console.log('First Name:', firstname);
    console.log('Last Name:', lastname);
    console.log('Username:', username);
    console.log('Bio:', bio);
    console.log('Display Name:', displayName);

    try {
        const response = await fetch('https://demoapi.ppleapp.com/api/v1/admin/edit-user-account', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ firstname, lastname, username, bio, displayName }),
        });

        if (response.ok) {
            const data = await response.json();
            console.log('API Response:', data);
            res.render('edit', { message: 'User successfully created!' });
        } else {
            res.render('edit', { error: 'User already exists or cannot create user!' });
        }
    } catch (error) {
        console.error('Error:', error);
        res.render('edit', { error: 'An error occurred while processing your request' });
    }
});

app.post('/attach-user', async (req, res) => {
    const { eventId, userId } = req.body;
    console.log('eventid:', eventId);
    console.log('userid:', userId);
    

    try {
        const response = await fetch('https://demoapi.ppleapp.com/api/v1/admin/admin-attach-user-to-event', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${adminToken}`
            },
            body: JSON.stringify({ eventId,userId }),
        });

        if (response.ok) {
            const data = await response.json();
            console.log('API Response:', data);
            res.render('attach', { message: 'User successfully attached!' });
        } else {
            res.render('attach', { error: 'error occured attaching the user to an event!' });
        }
    } catch (error) {
        console.error('Error:', error);
        res.render('attach', { error: 'An error occurred while processing your request' });
    }
});

app.listen(port, () => console.log(`App listening to port ${port}`));
